name: Deploy to WordPress.org
on:
  release:
    types:
      - created
      - edited

jobs:
  deploy:
    name: On Release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master

      - name: Setup Workflow Context
        id: workflow
        working-directory: ${{ runner.temp }}
        env:
          REPO: ${{ github.repository }}
        run: |
          mkdir dist
          echo ::set-output name=DIST::${PWD}/dist
          echo ::set-output name=PACKAGE::${REPO##*/}

      - name: PHP version
        run: php --version

      - name: Validate composer.json and composer.lock
        run: composer validate

      - name: Get Composer Cache Directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache Composer vendor directory
        uses: actions/cache@v1
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-composer-

      - name: Install PHP Dependencies
        run: composer install --no-progress --no-dev --optimize-autoloader

      - name: Prepare Files
        working-directory: ${{ steps.workflow.outputs.DIST }}
        run: |
          rsync -r --exclude-from=.distignore ${{ github.workspace }} .
          mkdir .wporg
          rsync -r ${{ github.workspace }}/.wporg .wporg
          rm -rf ${{ github.workspace }}/*
          rsync -r . ${{ github.workspace }}

      - name: List Files
        run: find .

      - name: WordPress Plugin Deploy
        uses: 10up/action-wordpress-plugin-deploy@master
        env:
          SVN_PASSWORD: ${{ secrets.SVN_PASSWORD }}
          SVN_USERNAME: ${{ secrets.SVN_USERNAME }}
          ASSETS_DIR: .wporg
